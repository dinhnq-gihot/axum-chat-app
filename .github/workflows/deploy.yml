name: Deploy

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yml
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  deploy:
    name: Build and Deploy
    needs:
      - ci
    if: |
      always() &&
      (needs.ci.result == 'success' || needs.ci.result == 'cancelled')     
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN  }}

      - name: Deploy to server
        run: |
          # Pull the new image
          docker pull ${{ env.REGISTRY }}/${{ github.repository }}:latest

            # Stop and remove any container using port 3000
          CONTAINER_IDS=$(docker ps -q --filter "publish=3000" --filter "publish=5432")
          
          if [ -n "$CONTAINER_IDS" ]; then
            for CONTAINER_ID in $CONTAINER_IDS; do
              docker stop $CONTAINER_ID
              docker rm $CONTAINER_ID
            done
          fi
          
          # Start the new container
          cd ./docker
          docker compose up -d
          
          # Clean up old images
          docker image prune -f

      - name: Check deployment
        run: |
          # Wait for container to start
          sleep 10
          # Check if container is running
          if ! docker ps | grep -q chat-app; then
            echo "Container is not running"
            exit 1
          fi
          # Check if application is responding
          if ! curl -f http://localhost:3000/; then
            echo "Application is not responding"
            exit 1
          fi 
