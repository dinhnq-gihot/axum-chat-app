name: CI

on:
  push:
    tags:
      - 'axum-chat-app-v*'

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Unit, doc and integration tests
    runs-on: self-hosted
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust cache
        uses: mozilla-actions/sccache-action@v0.0.5
        with:
          version: "v0.8.1"

      - name: Unit tests
        run:  cargo test --locked --workspace --all-features -- --nocapture
        if: success() || failure()
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: info

  fmt:
    name: fmt
    runs-on: self-hosted
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Rust cache
        uses: mozilla-actions/sccache-action@v0.0.5
        with:
          version: "v0.8.1"

      - name: cargo fmt
        run: cargo +nightly fmt --all -- --check
  
  clippy:
    name: clippy
    runs-on: self-hosted
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Rust cache
        uses: mozilla-actions/sccache-action@v0.0.5
        with:
          version: "v0.8.1"

      - name: cargo clippy
        run: cargo clippy --all --all-targets --all-features -- -D warnings

  docker:
    name: Build and push Docker image
    needs: 
      - test
      - fmt
      - clippy
    if: |
      always() &&
      (needs.test.result == 'success' || needs.test.result == 'cancelled') &&
      (needs.clippy.result == 'success' || needs.clippy.result == 'cancelled') &&
      (needs.fmt.result == 'success' || needs.fmt.result == 'cancelled')
    runs-on: self-hosted
    timeout-minutes: 60

    steps:
      - name: Print repository name
        run: echo "RepositoryName:${{ github.repository }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN  }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}:buildcache,mode=max 